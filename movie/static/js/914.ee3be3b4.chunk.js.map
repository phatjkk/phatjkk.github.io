{"version":3,"file":"static/js/914.ee3be3b4.chunk.js","mappings":"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","sources":["Sv1.js","Sv2.js","Watch.js"],"sourcesContent":["import { useEffect,useState } from \"react\";\r\nconst fetch = require(\"sync-fetch\");\r\n\r\nfunction Sv1({ movieObject }) {\r\n  const [downloadSpeed,ChangeSpeed] = useState(0)\r\n  const [countPeers,ChangePeers] = useState(0)\r\n  const [processStatus,ChangeProcessStatus] = useState(\"\")\r\n  function getReadableFileSizeString(fileSizeInBytes) {\r\n\r\n    var i = -1;\r\n    var byteUnits = [' kbps', ' Mbps', ' Gbps', ' Tbps', 'Pbps', 'Ebps', 'Zbps', 'Ybps'];\r\n    do {\r\n        fileSizeInBytes = fileSizeInBytes / 1024;\r\n        i++;\r\n    } while (fileSizeInBytes > 1024);\r\n\r\n    return Math.max(fileSizeInBytes, 0.1).toFixed(1) + byteUnits[i];\r\n    };\r\n    function humanFileSize(bytes, si=false, dp=1) {\r\n      const thresh = si ? 1000 : 1024;\r\n    \r\n      if (Math.abs(bytes) < thresh) {\r\n        return bytes + ' B';\r\n      }\r\n    \r\n      const units = si \r\n        ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] \r\n        : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\r\n      let u = -1;\r\n      const r = 10**dp;\r\n    \r\n      do {\r\n        bytes /= thresh;\r\n        ++u;\r\n      } while (Math.round(Math.abs(bytes) * r) / r >= thresh && u < units.length - 1);\r\n    \r\n    \r\n      return bytes.toFixed(dp) + ' ' + units[u];\r\n    }\r\n  useEffect(() => {\r\n    let listTracker = fetch(\r\n      \"https://ngosang.github.io/trackerslist/trackers_all.txt\"\r\n    )\r\n      .text()\r\n      .match(/[^\\r\\n]+/g);\r\n\r\n    const trackers = [\r\n      \"wss://tracker.btorrent.xyz\",\r\n      \"wss://tracker.openwebtorrent.com\",\r\n      \"udp://glotorrents.pw:6969/announce\",\r\n      \"udp://tracker.opentrackr.org:1337/announce\",\r\n      \"udp://torrent.gresille.org:80/announce\",\r\n      \"udp://tracker.openbittorrent.com:80\",\r\n      \"udp://tracker.coppersurfer.tk:6969\",\r\n      \"udp://tracker.leechers-paradise.org:6969\",\r\n      \"udp://p4p.arenabg.ch:1337\",\r\n      \"udp://p4p.arenabg.com:1337\",\r\n      \"udp://tracker.internetwarriors.net:1337\",\r\n      \"udp://9.rarbg.to:2710\",\r\n      \"udp://9.rarbg.me:2710\",\r\n      \"udp://exodus.desync.com:6969\",\r\n      \"udp://tracker.cyberia.is:6969\",\r\n      \"udp://tracker.torrent.eu.org:451\",\r\n      \"udp://tracker.open-internet.nl:6969\",\r\n      \"wss://tracker.btorrent.xyz\",\r\n      \"wss://tracker.openwebtorrent.com\",\r\n      \"wss://tracker.webtorrent.io\",\r\n      ...listTracker,\r\n    ];\r\n\r\n    const rtcConfig = {\r\n      iceServers: [\r\n        {\r\n          urls: [\r\n            \"stun:stun.l.google.com:19305\",\r\n            \"stun:stun1.l.google.com:19305\",\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    const trackerOpts = {\r\n      announce: trackers,\r\n      rtcConfig: rtcConfig,\r\n    };\r\n\r\n    const torrentOpts = {\r\n      announce: trackers,\r\n    };\r\n\r\n    const WebTorrent = require(\"webtorrent/webtorrent.min.js\");\r\n    const client = new WebTorrent({\r\n      tracker: trackerOpts,\r\n    });\r\n\r\n    const torrentId =  movieObject.hash; \r\n    //   \"&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com\";\r\n    // // 'magnet:?xt=urn:btih:08ada5a7a6183aae1e09d831df6748d566095a10&dn=Sintel&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fsintel.torrent'\r\n    let handleGetProcess = null\r\n    client.add(torrentId, torrentOpts, function (torrent) {\r\n      // Torrents can contain many files. Let's use the .mp4 file\r\n      const file = torrent.files.find(function (file) {\r\n        return file.name.endsWith(\".mp4\");\r\n      });\r\n      handleGetProcess = setInterval(()=>{\r\n        ChangeSpeed(torrent.downloadSpeed)\r\n        ChangePeers(torrent.numPeers)\r\n        ChangeProcessStatus(humanFileSize(torrent.downloaded,true)+\" (\"+Math.round(torrent.progress*100)/100+\" %)\")\r\n      }, 1000);\r\n\r\n// When you want to cancel it:\r\n      // Display the file by adding it to the DOM. Supports video, audio, image, etc. files\r\n      file.appendTo(\"#player\");\r\n    });\r\n    return () => {\r\n      if(handleGetProcess!==null){\r\n      clearInterval(handleGetProcess);\r\n      }\r\n      client.destroy();\r\n    }\r\n  }, []);\r\n  return (<>\r\n  \r\n  <div id=\"player\" className=\"webtor w-full\"></div>\r\n  <h4 className=\"text-white text-center\">\r\n  Speed: {getReadableFileSizeString(downloadSpeed)} - Peers: {countPeers} - Downloaded: {processStatus}</h4>\r\n  </>);\r\n}\r\nexport default Sv1;\r\n","import { useEffect } from \"react\";\r\n\r\nfunction Sv2({movieObject}){\r\n    useEffect(() => {\r\n        window.webtor = window.webtor || [];\r\n        window.webtor.push({\r\n          id: \"player\",\r\n          magnet: movieObject.hash,\r\n          on: function (e) {\r\n            if (e.name == window.webtor.TORRENT_FETCHED) {\r\n              console.log(\"Torrent fetched!\", e.data);\r\n            }\r\n            if (e.name == window.webtor.TORRENT_ERROR) {\r\n              console.log(\"Torrent error!\");\r\n            }\r\n          },\r\n          poster:\r\n            \"https://www.themoviedb.org/t/p/original\" + movieObject.backdrop_path,\r\n          subtitles: [\r\n          //   {\r\n          //     srclang: 'vi',\r\n          //     label: 'Tiếng việt',\r\n          //     src: \"https://pancakeswapauto.ml/all_sub/\"+movieObject.id+\"_vi.srt\",\r\n          //     default: false,\r\n          // }\r\n            \r\n          ],\r\n          imdbId: movieObject.imdb_id,\r\n          width: \"100%\",\r\n          lang: \"en\",\r\n          i18n: {\r\n            en: {\r\n              common: {\r\n                \"prepare to play\": \"Preparing Video Stream... Please Wait...\",\r\n              },\r\n              stat: {\r\n                seeding: \"Seeding\",\r\n                waiting: \"Client initialization\",\r\n                \"waiting for peers\": \"Waiting for peers\",\r\n                from: \"from\",\r\n              },\r\n            },\r\n          },\r\n        });\r\n    })\r\n    return (  <div id=\"player\" className=\"webtor w-full\"></div>)\r\n     \r\n}\r\nexport default Sv2;","import MOVIES_DATA from \"./movies_data\";\r\nimport StarRatingComponent from \"react-star-rating-component\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport Sv1 from \"./Sv1\";\r\nimport Sv2 from \"./Sv2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MovieTypes from \"./MovieTypes\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTimes,\r\n  faStar,\r\n  faPlayCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  faImdb\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nconst fetch = require(\"sync-fetch\");\r\nfunction Watch(params) {\r\n  const [serverUse, ChangeServer] = useState(2);\r\n  let json_data = localStorage.getItem(\"movieData\");\r\n  const [isChoose, setIsChoose] = useState(false);\r\n  let isAdvance = false;\r\n\r\n  let movieObject = {};\r\n  if (json_data !== null && json_data !== undefined) {\r\n    let storageData = JSON.parse(json_data);\r\n    if (storageData.AdSearch === 1) {\r\n      isAdvance = true;\r\n      movieObject.title = storageData.title;\r\n      movieObject.english_title = \"\";\r\n      movieObject.hash = storageData.hash;\r\n      movieObject.imdb_id = null;\r\n      movieObject.backdrop_path = \"\";\r\n    } else {\r\n      movieObject = MOVIES_DATA.filter(function (obj) {\r\n        return obj.id === JSON.parse(json_data).idMovie;\r\n      }).map(function (obj) {\r\n        return obj;\r\n      });\r\n      movieObject = movieObject[0];\r\n    }\r\n  }\r\n  let movieInfo = fetch(\r\n    \"https://api.themoviedb.org/3/movie/\" +\r\n      movieObject.tmdb_id +\r\n      \"?api_key=1f4394eb41374acd39498dc5d49bac84&append_to_response=videos%2Ccredits&language=vi-VN\",\r\n    {\r\n      method: \"GET\",\r\n      headers: {},\r\n    }\r\n  ).json();\r\n  // function getSub() {\r\n  //   const sub_data = fetch(\r\n  //     \"https://tdgvnbqyeablbicdulwh.supabase.co/rest/v1/movies?select=subtitles%2Cenglish_subtitles&id=eq.\" +\r\n  //       movieObject.id,\r\n  //     {\r\n  //       method: \"GET\",\r\n  //       headers: {\r\n  //         apikey:\r\n  //           \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYzMDMzNDg4OSwiZXhwIjoxOTQ1OTEwODg5fQ.tucD7--82BeiaZBBu4erF53BJEBfRYcr-WSlvC9mv5o\",\r\n  //         \"accept-language\": \"vi,en;q=0.9,en-GB;q=0.8,en-US;q=0.7\",\r\n  //       },\r\n  //     }\r\n  //   ).json()[0];\r\n  //   // console.log(metadata)\r\n  //   let en_sub_url = URL.createObjectURL(\r\n  //     new Blob([sub_data.english_subtitles], {\r\n  //       type: \"text/vtt;charset=utf8\",\r\n  //     })\r\n  //   );\r\n  //   let vi_sub_url = URL.createObjectURL(\r\n  //     new Blob([sub_data.subtitles], { type: \"text/vtt;charset=utf8\" })\r\n  //   ); //;charset=utf8\r\n\r\n  //   console.log(\"{\" + en_sub_url + \"}\");\r\n  //   return [\r\n  //     {\r\n  //       srclang: \"en\",\r\n  //       label: \"English\",\r\n  //       src: \"https://brenopolanski.github.io/html5-video-webvtt-example/MIB2-subtitles-pt-BR.vtt\",\r\n  //       default: true,\r\n  //     },\r\n  //     {\r\n  //       srclang: \"vi\",\r\n  //       label: \"Tiếng Việt\",\r\n  //       src: vi_sub_url,\r\n  //       default: false,\r\n  //     },\r\n  //   ];\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      {isChoose ? (\r\n        <div >\r\n          <Link to=\"/\">\r\n            <FontAwesomeIcon\r\n              className=\"text-white hover:text-gray-300 text-2xl absolute top-5 right-8 shadow-lg\"\r\n              icon={faTimes}\r\n            />\r\n          </Link>\r\n          <h3 className=\"text-center text-white text-lg font-bold pt-2 pb-2\">\r\n            {movieObject.title}\r\n            <p className=\"text-sm font-thin\">{movieObject.english_title} </p>\r\n          </h3>\r\n          {serverUse === 1 ? (\r\n            <Sv1 movieObject={movieObject} />\r\n          ) : (\r\n            <Sv2 movieObject={movieObject} />\r\n          )}\r\n\r\n          {/* <TorrentPlayer hash={movieObject.hash} /> */}\r\n          <button\r\n            onClick={() => ChangeServer(2)}\r\n            className=\"mr-3 mt-3 bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\"\r\n          >\r\n            Server 1\r\n          </button>\r\n          <button\r\n            onClick={() => ChangeServer(1)}\r\n            className=\"bg-blue-500 mt-3 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\"\r\n          >\r\n            Server 2\r\n          </button>\r\n          <h4 className=\"text-white\">\r\n            Để xem phụ đề Tiếng Việt hãy nhấn nút subtitle ở góc phải rồi chọn\r\n            tab OpenSubtitles để chọn ngôn ngữ nhé!\r\n          </h4>\r\n          <h4 className=\"text-white\">\r\n            <b>Lưu ý:</b> Do sử dụng giao thức torrent để truyền tải dữ liệu nên\r\n            tốc độ tải sẽ rất nhanh và không giựt lag, tuy nhiên sẽ cần một\r\n            khoảng thời gian chờ ban đầu để hệ thống kết nối với nhiều peer khác\r\n            nhau nhằm giữ quá trình xem phim ổn định.\r\n          </h4>\r\n          {/* <video\r\n            controls\r\n            src={movieObject[0].hash}\r\n            poster={\"https://www.themoviedb.org/t/p/w500\"+movieObject[0].backdrop_path}\r\n            width=\"100%\"\r\n            data-title={movieObject[0].english_title}\r\n          ></video> */}\r\n          {/* <track\r\n              srclang=\"en\"\r\n              label=\"test\"\r\n              default\r\n              src=\"https://raw.githubusercontent.com/andreyvit/subtitle-tools/master/sample.srt\"\r\n            ></track> */}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <img\r\n            className=\"brightness-50 blur-lg h-screen\"\r\n            src={\r\n              \"https://www.themoviedb.org/t/p/original\" +\r\n              movieObject.backdrop_path\r\n            }\r\n          ></img>\r\n          <Link to=\"/\">\r\n            <FontAwesomeIcon\r\n              className=\"text-white hover:text-gray-300 text-2xl absolute top-5 right-8 shadow-lg\"\r\n              icon={faTimes}\r\n            />\r\n          </Link>\r\n          <div className=\"md:flex absolute sm:top-[5%] top-[5%]  left-[5%]\">\r\n            <img\r\n              className=\"md:w-[30%] sm:w-[80%]  rounded-md shadow-lg\"\r\n              src={\r\n                \"https://www.themoviedb.org/t/p/original\" +\r\n                movieInfo.poster_path\r\n              }\r\n            ></img>\r\n            {/* text div */}\r\n            <div className=\"top-[5%] ml-5 mt-2 text-white\">\r\n              <h1 className=\"font-semibold text-4xl\">{movieObject.title}</h1>\r\n              <h1 className=\"font-normal text-xl\">\r\n                {movieObject.english_title}{\" \"}\r\n              </h1>\r\n              <h1 className=\"mt-3 font-semibold text-base\">\r\n                {new Date(movieObject.release_date).getFullYear()} •{\" \"}\r\n                {movieObject.runtime} phút •{\" \"}\r\n                {movieObject.genre_ids.slice(0, 3).map((e) => (\r\n                  <>{MovieTypes.find((x) => x.key === e).name}/</>\r\n                ))}\r\n                ... • Ngôn ngữ: {movieInfo.spoken_languages[0].english_name}\r\n              </h1>\r\n              <StarRatingComponent\r\n                name=\"IMBDrate\"\r\n                editing={false}\r\n                renderStarIcon={() => (\r\n                  <FontAwesomeIcon\r\n                    className=\"mr-1 shadow-lg text-xs\"\r\n                    icon={faStar}\r\n                  />\r\n                )}\r\n                starCount={5}\r\n                value={(movieObject.imdb * 5) / 10}\r\n              />\r\n              <p className=\"font-semibold text-base\">\r\n                IMDb: {movieObject.imdb}/10\r\n              </p>\r\n              <h1 className=\"mt-3 mr-10 break-words font-semibold text-base\">\r\n                Diễn viên:{\" \"}\r\n                {movieInfo.credits.cast.slice(0, 5).map((e, i) => (\r\n                  <>{e.name}, </>\r\n                ))}\r\n                ..\r\n              </h1>\r\n              <p className=\"mt-3 mr-10 break-words font-semibold text-base\">\r\n                {movieInfo.overview}\r\n              </p>\r\n              {/* <div class=\"flex flex-col items-center justify-center gap-3\">\r\n                      <img\r\n                        class=\"w-18 h-18 rounded-full ml-10\"\r\n                        src={\r\n                          \"https://www.themoviedb.org/t/p/w92\" + e.profile_path\r\n                        }\r\n                      />\r\n                      <h1 class=\"text-slate-900 text-xs w-full ml-10 font-medium dark:text-slate-200\">\r\n                        {e.name}\r\n                      </h1>\r\n                    </div> */}\r\n\r\n              <div className=\"absolute bottom-2 left-[32%]\">\r\n                <button\r\n                  onClick={() => setIsChoose(true)}\r\n                  className=\"mr-3 mt-3 shadow-md text-sm bg-blue-900 hover:bg-blue-800 text-white font-bold py-2 px-4  rounded\"\r\n                >\r\n                  Xem ngay{\" \"}\r\n                  <FontAwesomeIcon\r\n                    className=\"ml-1 shadow-lg text-lg\"\r\n                    icon={faPlayCircle}\r\n                  />\r\n                </button>\r\n                <button className=\"mr-3 mt-3 shadow-md text-sm bg-cyan-800 hover:bg-cyan-900 text-white font-bold py-2 px-4  rounded\">\r\n                  Trailer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Watch;\r\n"],"names":["fetch","require","movieObject","useState","downloadSpeed","ChangeSpeed","countPeers","ChangePeers","processStatus","ChangeProcessStatus","useEffect","listTracker","text","match","trackers","trackerOpts","announce","rtcConfig","iceServers","urls","torrentOpts","client","tracker","torrentId","hash","handleGetProcess","add","torrent","file","files","find","name","endsWith","setInterval","numPeers","bytes","si","dp","thresh","Math","abs","units","u","r","round","length","toFixed","humanFileSize","downloaded","progress","appendTo","clearInterval","destroy","id","className","fileSizeInBytes","i","max","getReadableFileSizeString","window","webtor","push","magnet","on","e","TORRENT_FETCHED","console","log","data","TORRENT_ERROR","poster","backdrop_path","subtitles","imdbId","imdb_id","width","lang","i18n","en","common","stat","seeding","waiting","from","params","serverUse","ChangeServer","json_data","localStorage","getItem","isChoose","setIsChoose","undefined","storageData","JSON","parse","AdSearch","title","english_title","MOVIES_DATA","obj","idMovie","map","movieInfo","tmdb_id","method","headers","json","to","icon","faTimes","onClick","src","poster_path","Date","release_date","getFullYear","runtime","genre_ids","slice","MovieTypes","x","key","spoken_languages","english_name","editing","renderStarIcon","faStar","starCount","value","imdb","credits","cast","overview","faPlayCircle"],"sourceRoot":""}